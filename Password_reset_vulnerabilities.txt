Password Reset Vulnerabilities

1. **Password reset link not expiring**: When a user requests a password reset, they receive a password reset link. Normally, this link should expire after a certain period of time. If the link does not expire and can be used multiple times to reset the password, it is considered a vulnerability.

**First scenario**:

1) Go to https://site.com/users/forgotten_password and send the password reset link to your email.

2) Go to your email inbox, where you will see a reset token like this: https://site.com/users/new_password?reset_token=your-reset-token, and click the link to change your password.

You can use this link multiple times to reset the password.

Impact: The password reset link does not expire after changing the password.

https://hackerone.com/reports/898841

**Second scenario:**

1) Go to https://infogram.com/forgot and request a password reset link.

2) Don’t use the link; keep it in your email inbox.

3) After some time, repeat step 1.

4) This time, use the password reset link requested in step 3 (the second link).

5) After changing the password, use the password reset link from step 1.

6) You'll see that the password reset link from step 1 has not expired, even after the password change.

https://hackerone.com/reports/283550

**Third scenario:**

1) Create an account or use an existing one.

2) Confirm your email address.

3) Log out of your account and request a password reset code for your account.

4) Don’t use the code that was sent to your email address.

5) In a new browser, log back into your account.

6) Go to account settings and change your password.

7) Now check your email for the password reset code requested in step 3.

8) Change your password using that reset password code.

9) You’ll see that your password has been changed, but the reset code has not expired after changing the password.

Impact: If the site has a token issue, the reset password token from step 3 is still usable and has not expired. If the victim opens their email in a cyber cafe or on an attacker’s device and forgets to log out, the attacker can reset the victim’s password.

https://hackerone.com/reports/948345

**Fourth scenario:**

1) Send the password reset link to your email.

2) Don’t open the password link; just copy it and paste it into any editor.

3) Open your account.

4) Go to your account settings.

5) Under account, you will see Account Overview.

6) Go to the Email and Password option and change the email and verify it.

7) After changing the email, go to your password reset link that you copied.

8) Change your password.

9) Boom! Password changed.

Impact: The attacker can still change the password if the victim thinks their account is compromised and decides to change their email.

https://hackerone.com/reports/685007

**Fifth scenario:**

1) The attacker visits https://card.starbucks.com.sg/forgetPassword.php and enters their account's email.

2) The link is sent to the attacker's email inbox, and they click on the link while monitoring the request with a proxy (e.g., Burp Suite).

3) The attacker then modifies the email to use the victim's email in these two requests, as shown in the images (1.PNG & 2.PNG).

4) Upon submitting the request, the password will be changed, and the victim's password will be changed to the desired password.

Impact: This attack does not require the victim to perform any actions, yet the account can be taken over by the attacker. This leaks the victim's personal information and Starbucks card, which can be used to purchase items. The attacker can also capture the session ID.

https://hackerone.com/reports/315879

**Sixth scenario:**

Not using the phone number or email of the user corresponding to the session (take the phone number/email from the request).

1) The web app sends a verification code to the email before changing some sensitive fields.

2) The attacker intercepts the request in Burp Suite and finds the email parameter (e.g., email:victim@gmail.com) in the POST request.

3) The attacker changes the email to another Gmail (e.g., attacker@gmail.com).

4) Boom! The attacker receives the verification code at attacker@gmail.com.

2. **Password reset token leak via referer**: When a user clicks on social media links from the password reset page, the password reset token can be leaked through the referer header.

1) Go to https://ucp.nordvpn.com/lost-password.

2) Enter your email and click on reset password.

3) Go to your email and click on the password reset link.

4) On the password reset page, click on the social media links given below and capture the request using Burp Suite.

5) Check if the referer header is leaking the password reset token.

Impact: If a user forgets their password and receives a reset link by email, then opens the password reset page but eventually remembers their password and clicks on a social media page, the link may be leaked in the referer header. This allows the person controlling that site to change the user's password, leading to a potential account takeover.

https://hackerone.com/reports/751581

3. **Password reset token leak via response**: When requesting a password reset link, the reset token may be returned in the response, making it accessible through tools like Burp Suite.

1) Send the password reset link request.

2) Intercept the response.

3) See if the reset-password link was returned in the response.

Impact: The token is exposed in the response, which can lead to account takeover if an attacker intercepts the communication.

https://medium.com/@yassergersy/account-take-over-via-reset-password-f2e9d887bce1

4. **Password reset with manipulating email parameter**: By manipulating the email parameter in the password reset request, an attacker can potentially receive the reset link intended for the victim.

- Double parameter (HPP/HTTP parameter pollution):
  email=victim@xyz.tld&email=hacker@xyz.tld

- Carbon copy:
  email=victim@xyz.tld%0a%0dcc:hacker@xyz.tld

- Using separators:
  email=victim@xyz.tld,hacker@xyz.tld
  email=victim@xyz.tld%20hacker@xyz.tld
  email=victim@xyz.tld|hacker@xyz.tld

- No domain:
  email=victim

- No TLD (Top Level Domain):
  email=victim@xyz

- XML:
  try XXE!

- JSON table:
  {"email":["victim@xyz.tld","hacker@xyz.tld"]}

Impact: The attacker can manipulate the parameters to receive the password reset link meant for the victim, leading to account takeover.

https://hackerone.com/reports/1175081

5. **Host Header Poisoning**: An attacker can manipulate the host header in the password reset request, causing the reset link to be sent to a malicious server.

1) Intercept the request and change the host header to attacker.com.

2) Check your email to see if the password reset link contains attacker.com in the URL. If it does, the site is vulnerable to password reset poisoning.

Methods to bypass:
- Add X-Forwarded-Host header:
  Host: attacker.com
  X-Forwarded-Host: target.com

- Alternative:
  Host: bing.com
  X-Forwarded-Host: target.com

- Another approach:
  Host: target.com
  Host: attacker.com

You can use an ngrok server as your attacker server.

Impact: The attacker can receive the password reset link on their server, leading to account takeover.

https://shahjerry33.medium.com/otp-bypass-developers-check-5786885d55c6
https://hackerone.com/reports/226659

6. **No rate limiting on password reset**: Lack of rate limiting allows an attacker to repeatedly request password reset links or attempt brute-force attacks on the reset function without being blocked.

1) Start Burp Suite and intercept the password reset request.

2) Send it to the intruder.

3) Use null payload.

Impact: The attacker can exploit the lack of rate limiting to flood the system with requests, leading to potential account takeover.

https://hackerone.com/reports/838572

7. **User enumeration via password reset page**: The password reset page may reveal whether a username or email exists in the system, allowing an attacker to enumerate valid usernames or emails.

1) Go to the password reset page.

2) Enter a username that exists; there would be no error, and it will be redirected to the login page.

3) Enter a username that doesn’t exist; there would be an error saying something like ‘user account doesn’t exist’ etc.

Impact: The attacker can use this information to find valid usernames or emails and target them for further attacks.

https://hackerone.com/reports/77067

8. **HTML Injection in password reset page**: HTML injection, also known as content spoofing or virtual defacement, can occur on the password reset page.

The steps were as follows:

1) Open the "Create New Account" page of the application, enter your email ID and password.

2) In the "First Name" parameter, insert an HTML injection payload:
   (<a href="attacker.com"><h1>Please click here to login to your account<h1></a>)

Impact: The attacker can inject
https://hackerone.com/reports/111094
